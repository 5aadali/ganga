name: Release Workflow

on:
  release:
    types:
      - published

jobs:
  retag:
    name: Update version number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup Git
      run: |
        git config --global user.email "a.richards@imperial.ac.uk"
        git config --global user.name "Alexander Richards"
        git config remote.origin.url 'https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git'
    - name: Hardcode development flag
      run: |
        sed --in-place "s/^_development = .*/_development = False/g" ganga/GangaCore/__init__.py
        git add ganga/GangaCore/__init__.py
        git commit -m "Setting developmet flag"
    - name: Hardcode version number
      run: |
        VERSION=$(basename ${GITHUB_REF})
        echo "::set-env name=VERSION::${VERSION}"
        sed --in-place "s/^_gangaVersion = .*/_gangaVersion = '${VERSION}'/g" ./setup.py
        sed --in-place "s/^_gangaVersion = .*/_gangaVersion = '${VERSION}'/g" ganga/GangaCore/__init__.py
        git add ./setup.py ganga/GangaCore/__init__.py
        git commit -m "Setting version number constants"
    - name: Commit release notes
      run: |
        ! read -rd"\n" REL_ID BODY < <(curl --request GET --url ${GITHUB_API_URL}/repos/${{ github.repository }}/releases/tags/${VERSION} | jq -r '.id, .body')
        echo "::set-env name=REL_ID::${REL_ID}"
        echo "::set-env name=BTEST::$'`echo "$BODY"`'"
        echo "${BODY}" > ganga/GangaRelease/ReleaseNotes-${VERSION}
        git add ganga/GangaRelease/ReleaseNotes-${VERSION}
        git commit -m "Creating release notes for version ${VERSION}"
    - name: Remove placeholder tag
      run: git push origin :refs/tags/${VERSION}
    - name: Re-tag
      run: |
        git tag -fa ${VERSION} -m "Ganga ${VERSION}"
        git push --tags
    - name: Update release
      run: |
        curl --request DELETE \
             --url ${GITHUB_API_URL}/repos/${{ github.repository }}/releases/$REL_ID \
             --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
        REL_DATA='{
          "name": "'"Ganga ${VERSION}"'",
          "tag_name": "'${VERSION}'",
          "body": "'`cat ganga/GangaRelease/ReleaseNotes-${VERSION} | sed 's/"/\\"/g' | awk '{printf "%s\\n", $0}'`'",
          "draft": false,
          "prerelease": true
        }'
        echo "$REL_DATA"
        curl --request POST \
             --url ${GITHUB_API_URL}/repos/${{ github.repository }}/releases \
             --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
             --header 'content-type: application/json' \
             --data "$REL_DATA"
